syntax = "proto3";
package user;

import "user/country.proto";
import "user/account.proto";

service CardService{
  //申请卡
  rpc ApplyCard(ApplyCardRequest) returns (ApplyCardResponse) {}
  //卡消费历史 History of payment at other website
  rpc CardHistory(CardHistoryRequest) returns (CardHistoryResponse) {}
  //卡充值提现明细
  rpc CardExchangeInfoList(CardExchangeInfoListRequest) returns (CardExchangeInfoListResponse) {}
  //暂示用以，忽略。关于nft购买的，卡充充值明细
  rpc CardExchangeInfoWithNftList(CardExchangeInfoWithNftListRequest) returns (CardExchangeInfoWithNftListResponse) {}
  //卡详情
  rpc CardDetail(CardDetailRequest) returns (CardDetailResponse) {}
  //卡列表
  rpc CardList(CardListRequest) returns (CardListResponse) {}
  //账号提现
  rpc CardWithdraw(CardWithdrawRequest) returns (CardWithdrawResponse) {}
  //获取卡提现应得金额
  rpc GetWithdrawResAmt(GetWithdrawResAmtRequest) returns (GetWithdrawResAmtResponse) {}
  //账号充值
  rpc CardRecharge(CardRechargeRequest) returns (CardRechargeResponse) {}
  //从第三方商户购买nft
  rpc BuyNftForPay(BuyNftForPayRequest) returns (BuyNftForPayResponse) {}
  //修改实体卡申请信息
  rpc UpdatePcardApplyInfo(PcardApplyInfo) returns (PcardApplyInfo) {}
  //获取实体卡申请信息
  rpc GetPcardApplyInfo(GetPcardApplyInfoRequest) returns (PcardApplyInfo) {}
  rpc ListPcardApplyInfo(ListPcardApplyInfoRequest) returns (ListPcardApplyInfoResponse) {}
  //上传图片
  rpc UserUpload(UserUploadRequest) returns (UserUploadResponse) {}
}
message BuyNftForPayRequest {
  //客户邮箱
  string mail=1;
  //银行付款trade_no
  string trade_no=2;
  //支付卡
  string bankcard_no=3;
  //    金额
  double amt=4;
  //币种
  string currency=5;
  //订单时间
  int64 order_time=6;
  //付款时间
  int64 payment_time=7;
  //预设nft订单, 同钱包库的卡交易的orderNo
  string order_id=8;
  //商户编号
  string  mer_no =9;
}
message BuyNftForPayResponse {
  string orderid=1;
  int64 user_id=2;
}


message CardInfo {
  int64 id = 1;
  string card_no =2;
  //USD CNY SGD
  CurrencyCode symbol=3;
  string expiry_date =9;
  string cvv =10;
  string open_id =11;
  int64  user_id=4;
  double balance=5;
  uint64 created_at = 6;
  uint64 updated_at = 7;
}

message ListPcardApplyInfoRequest {
  //updated_at desc ; default( id desc)
 string order_by =1;
}
message ListPcardApplyInfoResponse {
  repeated PcardApplyInfo items=1;
}
message UserUploadRequest {
  //fileName with extention. example : abc.jpg abc.jpeg
    string file_name =1;
    //image binary data
    bytes file_bytes =2;
}
message UserUploadResponse {
    string file_url=3;
}

message GetPcardApplyInfoRequest {

}
//    Physical card
message PcardApplyInfo {
  //database id: user id
  int64 id = 1;

  //证件类型 1 中国大陆身份证 2 港澳台或境外护照
  int32 id_type = 2;
  //  证件正面；上传才有.
  string id_image1 = 20;
  //  证件反面,上传才有.
  string id_image2 = 21;
  //实体卡号, 申请通过后才有.
  string card_no=24;
  //卡状态, 0 申请提交, 1 申请通过,2 申请拒绝
  string status=25;
  //拒绝原因
  string status_msg=26;
  //证件姓名
  string id_name = 4;
  //证件号码
  string id_no = 3;
  //性别: 1男 2女
  string gender = 14;
  //birsthday format: 1990-01-01
  string bod = 5;
  //姓氏拼音
  string first_name = 6;
  //名字拼音
  string last_name = 7;
  //婚姻状况 1 未婚 2 已婚
  string marital_status = 19;

  //收件地区 1 中国大陆 2 香港 3 新加坡
  string shipping_region = 8;
  //收件地址类型 1家庭地址 2 公司地址
  string shipping_address_type = 9;

  //省份
  string shipping_province = 10;
  //城市
  string shipping_city = 11;
  //邮编
  string postcode = 12;
  //收件详细地址
  string shipping_address = 13;

  //手机号码
  string mobile = 15;
  //境外城市
  string foreign_city = 17;
  //境外城市邮编
  string foreign_postcode = 18;
  //境外地址
  string foreign_address = 16;
  int64 created_at = 22;
  int64 updated_at = 23;
}

message ApplyCardRequest {
// default USD
  CurrencyCode currency=2;
}
message ApplyCardResponse {
}

message CardListRequest {

}
message CardListResponse {
  repeated CardInfo items=1;
}
message CardExchangeInfoListRequest {
  string cardNo = 1;
  //same as mysql's offsset; default(0)
  int64 start =2;
  //same as mysql's limit; default(20)
  int64 limit =3;
}
message CardExchangeInfoListResponse {
  repeated CardExchangeInfo items=1;
}

message CardExchangeInfoWithNftListRequest {
  //same as mysql's offsset; default(0)
  int64 start =2;
  //same as mysql's limit; default(20)
  int64 limit =3;
}
message CardExchangeInfoWithNftListResponse {
  repeated CardExchangeInfo items=1;
  repeated  NftTokenEvent nfts =2;
}

message CardHistoryRequest {
  string cardNo = 1;
////  default 1
//  int64 pageNo = 2;
//  //default 20
//  int64   pageSize = 3;

  //same as mysql's offsset; default(0)
  int64 start =2;
  //same as mysql's limit; default(20)
  int64 limit =3;
  //format 2023-08-08
  string startDate = 4;
  //format 2023-08-08
  string endDate = 5;
}
message CardHistoryResponse {
  repeated CardHistoryItem items=1;
}
message CardHistoryItem {
   string cardNo=1;
   string state=2;
   string orderNo=3;
   string tradeCurrency=4;
   string tradeAmt=5;
   string authCurrency=6;
   string authAmt=7;
   string tradeDes=8;
   string authMerchant=9;
   string authDate=10;
   string settleAmt=11;
   string settleCurrency=12;
   string settleDate=13;

}
message CardDetailRequest {
  string cardNo = 1;
}
message CardDetailResponse {
    string cardNo=1;
    string expiryData=2;
    string cvv=3;
    string state=4;
    string currency=5;
    string settleCurrency=6;
    string amount=7;
}

message CardWithdrawRequest {
  string cardNo = 1;
  double amt = 2;
}
message CardWithdrawResponse {
}
message GetWithdrawResAmtRequest {
  //需要提现金额
  double amt = 2;
}
message GetWithdrawResAmtResponse {
  //去除手续费后的金额
  double amt = 2;
  //手续费
  double fee=1;
}

message CardRechargeRequest {
  //    卡号	16
  string cardNo = 1;
  //    	卡有效期(月)	2
  string card_expire_month = 2;
  //    卡有效期(年)	4
  string card_expire_year = 3;
  //  cardSecurityCode CVV2/CSC
  string card_security_code = 4;
  //金额
  double amt = 5;
  //设为true时,购买nft
  bool chargeForNft = 6;
  //设为true时,创建虚似卡 费用5$；创建虚似卡时,前端只提供信用卡信息即可,可以不提供amt金额,使用服务端配制的5$.
  bool chargeForCreateVirtualCard = 11;
  //设为true时,创建实体卡 费用50$； 暂无实体卡功能
  bool chargeForCreatePhysicalCard = 12;

  //要购买的nft的tokenids列表；如果不指定token_ids,服务端将使用amt匹配出相应的nft.
  repeated int64 token_ids = 8;
  //要购买的各个nft-token数量列表
  repeated int64 values = 9;
  //购买动态金额的nft时使用.
  bool with_dynamic_nft = 7;
}
message CardRechargeResponse {
  //only for buy nft
  string nft_txid =1;
}

//after recharge/withdraw , this record will insert
message CardExchangeInfo {
  int64 id = 1;
  int64 user_id = 12;
  string card_no = 2;
  string order_no = 8;
  string trade_no = 9;
  //only for buy nft
  string nft_txid = 13;
  string counter_party = 3;
  // counter_party card number
  string counter_party_no = 4;
  //imcome positive, outcome negative
  double amt = 5;
  Status status = 10;
  enum Status{
    //未知或初始状态
    Unknow = 0;
    //成功: 用户账号已经充钱，或是nft发送(only for buy nft)。
    success = 1;
    //失败
    fail = 2;
    //卡里的钱扣了
    pay_ok=3;
  }
  string err_msg = 11;
  uint64 created_at = 6;
  uint64 updated_at = 7;
  //这个字段仅yz柚子平台用户购买的nft使用。1 柚子平台用户购买成功 ；2 已经转移到商户
  int64 yz_status = 14;
}
